#!/bin/bash

# Check for machine type
if [ "`uname`" = "Darwin" ]
then
	TTSCMD="say"
        TTSCMD2="pico2wave"
	TTSOPT="-o"
	TTSFILEEXT="aiff"
	TTSLCMD="afinfo"
	TTSLOPT=""
	TTSLPP=" | grep duration | cut -d' ' -f3"
else
	TTSCMD="espeak"
	TTSCMD2="pico2wave"
	TTSOPT="-z -w "
	TTSOPT2="--wave="
	TTSFILEEXT="wav"
	TTSLCMD="mplayer"
	TTSLOPT="-vo null -ao null -frames 0 -identify"
	TTSLPP=" | grep 'ID_LENGTH' | cut -d'=' -f2"
fi

# Test for TTS command existance
command -v $TTSCMD2 >/dev/null 2>&1
if [ $? != 0 ]
then
	echo "$TTSCMD2 unavailable, trying $TTSCMD..."
else
        TTSCMD=$TTSCMD2
	TTSOPT=$TTSOPT2
fi

command -v $TTSCMD >/dev/null 2>&1
if [ $? != 0 ]
then
	echo "Please install $TTSCMD or $TTSCMD2 onto your system"
        exit 1
fi

# Test for lame command existance
command -v lame >/dev/null 2>&1
if [ $? != 0 ]
then
	echo "Please install lame onto your system"
        exit 1
fi

# Test for TTS length command existance
command -v $TTSLCMD >/dev/null 2>&1
if [ $? != 0 ]
then
	echo "Please install $TTSLCMD onto your system"
	exit 1
fi

echo "Generating voice files with $TTSCMD".
FILENUM=1
IDX=0
TMPFILE="/tmp/speechidx.tmp"
cp /dev/null $TMPFILE
SPEECHDIR="mp3"
mkdir $SPEECHDIR 2>/dev/null
rm -f ${SPEECHDIR}/* >/dev/null 2>&1
rm -f models/model*.map >/dev/null 2>&1

for INFILE in models/globalAlert.txt
do
	echo "Processing global alerts..."
	while read LINE
	do		
		SWITCH=`echo $LINE | cut -d':' -f1`
		SWITCH=`echo $SWITCH | sed -e 's/^ *//;s/ *$//' | tr [a-z] [A-Z]`
		MSG=`echo $LINE | cut -d':' -f2`
		MSG=`echo $MSG | sed -e 's/^ *//;s/ *$//' | tr [a-z] [A-Z]`
		IDXTEXTID=`printf '%04d' $IDX`
		IDXTEXT=`echo ${IDXTEXTID}_${MSG} | tr -d ' '`
		$TTSCMD ${TTSOPT}${SPEECHDIR}/${IDXTEXT}.${TTSFILEEXT} "$MSG"
		eval TTSLEN=\`$TTSLCMD $TTSLOPT ${SPEECHDIR}/${IDXTEXT}.${TTSFILEEXT} $TTSLPP\`
		TTSLEN=`echo 'scale=0;' $TTSLEN '* 1000/1' | bc`
		lame --quiet ${SPEECHDIR}/${IDXTEXT}.${TTSFILEEXT} ${SPEECHDIR}/${IDXTEXT}.mp3
		echo "${SWITCH}:${IDXTEXTID}:${TTSLEN}:${MSG}" >> globalAlert.map
		rm ${SPEECHDIR}/${IDXTEXT}.${TTSFILEEXT}
		echo "Alert ${IDXTEXT}.mp3 generated (length $TTSLEN ms)"
		IDX=`expr $IDX + 1`
		if [ $IDX = 20 ]; then
			IDX=1000
		fi
 	done < $INFILE
done



for INFILE in models/model*Alert.txt
do
	echo "Processing file $INFILE..."
	IDX=2000
	OUTFILE=`echo $INFILE | sed -e 's/Alert\.txt/\.map/'`
	rm $OUTFILE 2>/dev/null
	echo "Adding global alerts to $INFILE..."
	echo ";The global alarms are currently hardcoded, index numbers can not be changed!" >> $OUTFILE
        cat globalAlert.map >> $OUTFILE	
	echo ";Below are custom alarms for individual models (switch, trim etc.)" >> $OUTFILE
	while read LINE
	do
		SWITCH=`echo $LINE | cut -d':' -f1`
		SWITCH=`echo $SWITCH | sed -e 's/^ *//;s/ *$//' | tr [a-z] [A-Z]`
		MSG=`echo $LINE | cut -d':' -f2`
		MSG=`echo $MSG | sed -e 's/^ *//;s/ *$//' | tr [a-z] [A-Z]`
		R=`grep "@${MSG}@" $TMPFILE`
		if [ $? != 0 ]
		then
			IDXTEXTID=`printf '%04d' $IDX`
			IDXTEXT=`echo ${IDXTEXTID}_${MSG} | tr -d ' '`
			$TTSCMD ${TTSOPT}${SPEECHDIR}/${IDXTEXT}.${TTSFILEEXT} "$MSG"
			eval TTSLEN=\`$TTSLCMD $TTSLOPT ${SPEECHDIR}/${IDXTEXT}.${TTSFILEEXT} $TTSLPP\`
			TTSLEN=`echo 'scale=0;' $TTSLEN '* 1000/1' | bc`
			lame --quiet ${SPEECHDIR}/${IDXTEXT}.${TTSFILEEXT} ${SPEECHDIR}/${IDXTEXT}.mp3
			echo "${SWITCH}:${IDXTEXTID}:${TTSLEN}:$MSG" >> $OUTFILE
			rm ${SPEECHDIR}/${IDXTEXT}.${TTSFILEEXT}
			echo "@${MSG}@:${IDXTEXTID}:${TTSLEN}" >> $TMPFILE
			echo "Alert ${IDXTEXT}.mp3 generated (length $TTSLEN ms)"
			IDX=`expr $IDX + 1`
		else
			echo "${SWITCH}:`echo $R|cut -d':' -f2,3`" >> $OUTFILE
		fi
                
	done < $INFILE
done
rm $TMPFILE
rm globalAlert.map
